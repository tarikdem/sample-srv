version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.2
  aws-ecs: circleci/aws-ecs@0.0.13

references:
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-

  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "package.json" }}

jobs:
  lint:
    docker:
      - image: circleci/node:12.21

    steps:
      - checkout
      - *restore_npm_cache
      - run: npm install
      - *save_npm_cache

      - run: npm run lint

  test:
    docker:
      - image: circleci/node:12.21
      - image: circleci/postgres:13.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app

    steps:
      - checkout
      - *restore_npm_cache
      - run: npm install
      - *save_npm_cache
      - run: npm run test:e2e

workflows:
  version: 2
  build-and-deploy-ecs-staging:
    jobs:
      - test
      - aws-ecr/build_and_push_image:
          requires:
            - test
          account-url: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
          repo: 'staging'
          region: ${AWS_REGION}
          tag: 'latest'
      - aws-ecs/update-task-definition:
          requires:
            - aws-ecr/build_and_push_image
          family: 'staging'
          container-image-name-updates: 'container=app,tag=latest'
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecs/update-task-definition
          family: 'staging'
          cluster-name: 'staging'

  build-and-deploy-ecs-production:
    jobs:
      - aws-ecr/build_and_push_image:
          filters:
            branches:
                ignore: /.*/
          account-url: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
          repo: 'production'
          region: ${AWS_REGION}
          tag: 'latest'
      - aws-ecs/update-task-definition:
          filters:
            branches:
                ignore: /.*/
          requires:
            - aws-ecr/build_and_push_image
          family: 'production'
          container-image-name-updates: 'container=app,tag=latest'
      - aws-ecs/deploy-service-update:
          filters:
            branches:
                ignore: /.*/
          requires:
            - aws-ecs/update-task-definition
          family: 'production'
          cluster-name: 'production'